from loguru import logger

logger.add(
    "log.json",
    format="{time} {level} {message}",
    level="DEBUG",
    rotation="1 week",
    compression="zip",
    serialize=True
)

def divide(a, b):
    return a / b

@logger.catch
def main():
    divide(1,0)

main()

# Уровень наибольшей детализации.
# Используется для вывода отладочной информации и подробного трассирования выполнения программы.
# Обычно не используется в продакшене.
logger.debug("Hello, world (debug)!")

# Уровень информационных сообщений.
# Используется для вывода информации о ходе выполнения программы и ее состоянии.
# Эти сообщения полезны для отслеживания основных событий и операций.
logger.info("Hello, world (info)!")

# Уровень предупреждений.
# Используется для сообщений о потенциальных проблемах или неожиданных событиях,
# которые не приводят к ошибке, но требуют внимания.
logger.warning("Hello, world (warning)!")

# Уровень ошибок.
# Используется для сообщений об ошибках,
# которые приводят к некорректной работе программы или неудачному выполнению операции.
logger.error("Hello, world (error)!")

# Уровень критических ошибок.
# Используется для сообщений о критических сбоях,
# которые могут привести к прекращению работы программы или серьезным последствиям.
logger.critical("Hello, world (critical)!")



